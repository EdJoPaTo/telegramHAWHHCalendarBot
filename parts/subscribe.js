const TelegrafInlineMenu = require('telegraf-inline-menu')

const calendarHelper = require('../lib/calendar-helper')

function getUrl(ctx) {
  return calendarHelper.getUrl(ctx.from.id, ctx.state.userconfig)
}

const menu = new TelegrafInlineMenu(mainText)

menu.submenu('üçè iOS / macOS', 'apple', new TelegrafInlineMenu(appleText))
  .urlButton('Kalender abonnieren', ctx => `https://calendarbot.hawhh.de/ics.php?url=${getUrl(ctx)}`)

menu.submenu('üóÇ HAW Mailer (Exchange)', 'exchange', new TelegrafInlineMenu(exchangeText))
  .urlButton('HAW Mailer', 'https://www.haw-hamburg.de/online-services/haw-mailer.html')
  .urlButton('HAW Anleitung Einrichten des HAW-Mailers auf Android, iOS und Co.', 'https://www.haw-hamburg.de/online-services/haw-mailer/faqs.html#c73012')

menu.submenu('üç∞ Google Kalender', 'google', new TelegrafInlineMenu(googleText))
  .urlButton('Google Calendar', 'https://calendar.google.com/')
  .manual('abonnieren mit dem HAW-Mailer (Exchange)', 'url:exchange', {root: true})

menu.submenu('Freestyle üòé', 'freestyle', new TelegrafInlineMenu(freestyleText))
  .urlButton('Kalender abonnieren', ctx => `https://calendarbot.hawhh.de/ics.php?url=${getUrl(ctx)}`)

function mainText(ctx) {
  let text = '*Kalender abonnieren*'
  text += '\nBitte w√§hle die Art aus, mit der du den Kalender abonnieren willst.\n\nIch empfehle √ºber iOS / macOS Boardmittel oder √ºber den HAW-Mailer.'

  const {calendarfileSuffix} = ctx.state.userconfig
  if (!calendarfileSuffix) {
    text += '\n\n‚ö†Ô∏è '
    text += `Die Kalender liegen f√ºr jeden frei zug√§nglich im Internet. Jeder, der deine Telegram Nutzer ID (\`${ctx.from.id}\`) kennt, kann sich deinen Kalender ansehen.`
    text += '\nDu kannst die URL Privacy aktivieren, musst danach jedoch die Kalender neu abonnieren.'
  }

  return text
}

function suffixButtonText(ctx) {
  const {calendarfileSuffix} = ctx.state.userconfig
  let text = 'URL Privacy'
  if (calendarfileSuffix) {
    text = `‚úÖ ${text}`
  } else {
    text = `‚ö†Ô∏è ${text} ‚ö†Ô∏è`
  }
  return text
}

function suffixText(ctx) {
  const {calendarfileSuffix} = ctx.state.userconfig

  let text = 'Die Kalender liegen f√ºr jeden frei zug√§nglich im Internet. '
  text += `Da die default URL nur aus deiner Telegram Nutzer ID (\`${ctx.from.id}\`) besteht, kann jeder mit dieser ID deinen Kalender einsehen.`
  text += '\nWird der URL eine zuf√§llige Zeichenkette angef√ºgt, muss diese erraten werden und erh√∂ht so deine Privatsph√§re.'
  text += ' Eine Zeichenkette, die deiner Kalender URL angef√ºgt wird, kannst du entweder generieren lassen (_Generieren‚Ä¶_) oder _Manuell setzen‚Ä¶_.'
  text += ' Jedoch musst du nach jedem √Ñndern dieser Einstellung deinen Kalender neu abonnieren, da sich die URL √§ndert.'

  text += '\n\n'
  text += `Deine Nutzer ID (\`${ctx.from.id}\`) ist nicht deine Telefonnummer oder Teil deines Usernamens und innerhalb von Telegram eindeutig.`
  text += ' Wenn man eine Nachricht von dir hat oder in einer Gruppe mit dir ist, kann man deine Nutzer ID erhalten.'

  text += '\n\n'
  if (calendarfileSuffix) {
    text += '‚úÖ Aktuell ist deine URL gesch√ºtzt und lautet:'
  } else {
    text += '‚ö†Ô∏è Aktuell ist deine URL *nicht* gesch√ºtzt und lautet:'
  }
  text += `\n\`https://${getUrl(ctx)}\``
  return text
}

const SUFFIX_MAX_LENGTH = 15
const SUFFIX_MIN_LENGTH = 3

function setSuffix(ctx, val) {
  val = String(val)
    .replace(/[^\w\d]/g, '')
    .slice(0, SUFFIX_MAX_LENGTH)
  if (val.length < SUFFIX_MIN_LENGTH) {
    return
  }
  ctx.state.userconfig.calendarfileSuffix = val
  return sendHintText(ctx)
}

function sendHintText(ctx) {
  const hintText = '‚ö†Ô∏è Hinweis: Dein Kalender muss nun neu abonniert werden!'
  if (ctx.updateType === 'callback_query') {
    return ctx.answerCbQuery(hintText, true)
  }
  return ctx.reply(hintText)
}

const suffixMenu = new TelegrafInlineMenu(suffixText)
menu.submenu(suffixButtonText, 'suffix', suffixMenu)

suffixMenu.button('Generieren‚Ä¶', 'g', {
  doFunc: ctx => {
    // 10^8 -> 10 ** 8
    const fromTime = Date.now() % (10 ** 8)
    return setSuffix(ctx, fromTime)
  }
})

suffixMenu.question('Manuell setzen‚Ä¶', 's', {
  setFunc: setSuffix,
  questionText: `Gib mir Tiernamen! ü¶Åü¶áüêåü¶ç\nOder andere zuf√§llige Buchstaben und Zahlen Kombinationen.\nSonderzeiche werden heraus gefiltert. Muss mindestens ${SUFFIX_MIN_LENGTH} Zeichen lang sein. Romane werden leider auf ${SUFFIX_MAX_LENGTH} Zeichen gek√ºrzt.`
})

suffixMenu.button('‚ö†Ô∏è Schutz entfernen', 'r', {
  doFunc: ctx => {
    delete ctx.state.userconfig.calendarfileSuffix
    return sendHintText(ctx)
  },
  hide: ctx => !ctx.state.userconfig.calendarfileSuffix
})

function appleText() {
  let text = '*Kalender abonnieren mit iOS / macOS*'
  text += '\nAuf den ersten Button klicken und die URL in Safari √∂ffnen. Auf der nun ge√∂ffneten Website auf das Kalender Icon klicken und best√§tigen. Done.'
  return text
}

function exchangeText(ctx) {
  let text = '*Kalender abonnieren mit dem HAW-Mailer*'
  text += '\nIm [HAW-Mailer](https://www.haw-hamburg.de/online-services/haw-mailer.html) unten links auf die Kalender Ansicht wechseln. Dann in der Men√ºleiste oben links das Drop Down Men√º von "Freigeben" √∂ffnen und "Kalender werden hinzugef√ºgt‚Ä¶" ausw√§hlen. (Wer zum Henker hat das √ºbersetzt?! Englisch: "Share" ‚Üí "Add Calendar‚Ä¶")'
  text += '\n'
  text += '\nIm aufgehenden Fenster in das untere Textfeld "Kalender aus dem Internet" die folgende URL einf√ºgen und danach best√§tigen.'
  text += `\nhttps://${getUrl(ctx)}`
  text += '\n'
  text += '\nDer Kalender wird nun alle paar Stunden vom HAW-Mailer aktualisiert. Wenn du dein Handy mit dem HAW-Mailer synchronisierst, ist der Kalender nun ebenfalls enthalten. Funktioniert mit iOS und Android sehr entspannt und du hast gleich deine HAW E-Mails mit dabei. (Windows Phone Tester hab ich noch keine gefunden üòú)'
  text += '\n'
  text += `\nDer Name des Kalenders (\`${ctx.from.id}\`) ist √ºbrigens deine Telegram Nutzer ID, mit der dich Bots zuordnen üòâ. Ohne das du jedoch einen Bot zuerst anschreibst, k√∂nnen Bots dich aber nicht anschreiben, also keine Angst vor Bot-Spam. F√ºhl dich frei den Kalender f√ºr dich umzubennen.`
  return text
}

function googleText(ctx) {
  let text = '*Kalender abonnieren mit dem Google Kalender*'
  text += '\n‚ö†Ô∏è Der Google Kalender ist manchmal etwas‚Ä¶ anstrengend. Erkl√§rung unten.'
  text += '\nüîÖ Alternativvorschlag: Kannst du vielleicht auch √ºber den HAW-Mailer synchronisieren? Dann hast du auch gleich deine HAW E-Mails ;)'

  text += '\n'
  text += '\nIn der linken Seitenleiste im [Google Kalender](https://calendar.google.com/) gibt es den Eintrag "Weitere Kalender". Dort auf das kleine Dropdown Dreieck klicken und den Men√ºpunkt "√úber URL hinzuf√ºgen" ausw√§hlen. Hier muss die folgende URL hinein kopiert werden.'
  text += `\nhttps://${getUrl(ctx)}`
  text += '\nNach dem Best√§tigen einen Moment warten, bis der Kalender im Google Kalender erschienen ist.'

  text += '\n'
  text += `\nWenn dein Kalender nun "@HAWHHCalendarBot (${ctx.from.first_name})" hei√üt, wie er eigentlich hei√üen soll, bist du ein gl√ºcklicher Sonderfall Googles und du bist fertig.`
  text += '\nWenn dein Kalender jedoch den Namen der URL tr√§gt, muss der Kalender umbenannt werden, damit er auf Android Ger√§te synchronisiert wird. (Google üôÑ) Verwende einen einfachen Namen daf√ºr, den Google nicht √ºberfordernd findet.'
  text += '\nFun Fact: Auf iOS Ger√§te wird der Google Kalender immer fehlerfrei synchronisiert, egal wie er hei√üt.'

  text += '\n'
  text += '\n‚ö†Ô∏è In der Vergangenheit hat der Google Kalender jeweils zwischen 30 Minuten und 40 Stunden gebraucht, um einen Kalender zu aktualisieren. Au√üerdem cacht Google (meiner Meinung nach) ein wenig zu viel, was f√ºr teilweise interessantes/sonderbares Verhalten gesorgt hat.'
  return text
}

function freestyleText(ctx) {
  let text = '*Kalender abonnieren Freesyle Edition* üòé'
  text += '\nWenn dein Kalender Standards unterst√ºtzt, benutz den ersten Button an dieser Nachricht und √∂ffne die Website. Klicke auf das Kalender Icon. Der Browser fragt dich nun, mit welchem Tool er den webcal:// Link √∂ffnen soll. W√§hle dein Kalenderprogramm.'

  text += '\n'
  text += '\nWenn das nicht funktioniert, finde einen Weg die folgende URL zu abonnieren. Achte dabei darauf, das du nicht importierst, sondern abonnierst. Nur dann aktualisiert sich der Kalender selbstst√§ndig bei √Ñnderungen im Bot.'
  text += `\nhttps://${getUrl(ctx)}`

  text += '\n'
  text += '\nViel Erfolg üòé'
  return text
}

module.exports = {
  menu
}
